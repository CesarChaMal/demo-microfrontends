name: Deploy Single-SPA Root

on:
  push:
    branches: [main, master]
    paths: ['single-spa-root/**']

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--openssl-legacy-provider"
    defaults:
      run:
        working-directory: single-spa-root
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.20.8'
        cache: 'npm'
        cache-dependency-path: single-spa-root/package-lock.json
        
    - name: Configure NPM registry
      run: |
        npm config delete registry || true
        npm config set registry https://registry.npmjs.org/
        npm config list
        echo "Registry: $(npm config get registry)"

    - name: Switch to local mode
      run: |
        cd ..
        node scripts/switch-mode.js local
        
    - name: Install shared dependencies
      run: |
        cd ../shared
        npm config delete registry || true
        npm config set registry https://registry.npmjs.org/
        npm ci --legacy-peer-deps
        
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
      
    - name: Build
      run: |
        export NODE_OPTIONS="--openssl-legacy-provider"
        npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION || 'eu-central-1' }}
        
    - name: Deploy root application to S3
      run: |
        echo "Deploying root application to S3..."
        aws s3 sync dist/ s3://${{ secrets.S3_BUCKET }}/ --delete --cache-control 'public, must-revalidate, max-age=0'
        echo "Root application deployed successfully"
        echo "Website URL: http://${{ secrets.S3_BUCKET }}.s3-website-${{ secrets.AWS_REGION || 'eu-central-1' }}.amazonaws.com"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
        AWS_REGION: ${{ secrets.AWS_REGION || 'eu-central-1' }}